import React, { useEffect, useRef, useState } from "react";
import Image from "next/image";
import Box from "@mui/material/Box";
import Typography from "@mui/material/Typography";
import { cardlogo } from "../../assets/images";
import { styled, alpha } from '@mui/material/styles';
import { Card, CardActionArea, CardContent, Grid, TextField } from "@mui/material";
import { useRouter } from "next/router";
import InputBase from '@mui/material/InputBase';
import Head from "next/head"; 
import Link from "next/link";
import axios from "axios";
import SearchIcon from '@mui/icons-material/Search';
import SideBarComponent from "src/components/sideBar/sideBarComponent";
import { useDispatch } from 'react-redux';
import { setData } from '../../store/store';

export interface Idata {
  _id: string;
  name: string;
}

export type apiResponse = Idata[];

const Search = styled('div')(({ theme }) => ({
  position: 'relative',
  borderRadius: theme.shape.borderRadius,
  backgroundColor: alpha(theme.palette.common.white, 0.15),
  '&:hover': {
    backgroundColor: alpha(theme.palette.common.white, 0.25),
  },
  marginLeft: 0,
  width: '100%',
  [theme.breakpoints.up('sm')]: {
    marginLeft: theme.spacing(1),
    width: 'auto',
  },
}));

const SearchIconWrapper = styled('div')(({ theme }) => ({
  padding: theme.spacing(0, 2),
  height: '100%',
  position: 'absolute',
  pointerEvents: 'none',
  display: 'flex',
  alignItems: 'center',
  justifyContent: 'center',
}));

const StyledInputBase = styled(InputBase)(({ theme }) => ({
  color: 'inherit',
  '& .MuiInputBase-input': {
    padding: theme.spacing(1, 1, 1, 0),
    // vertical padding + font size from searchIcon
    paddingLeft: `calc(1em + ${theme.spacing(4)})`,
    transition: theme.transitions.create('width'),
    width: '100%',
    [theme.breakpoints.up('sm')]: {
      width: '12ch',
      '&:focus': {
        width: '20ch',
      },
    },
  },
}));

export default function Home() {
  const [bot, setBot] = useState<apiResponse>([]);
  const router = useRouter();
  const [searchText, setSearchText] = useState('');
  const [searchResults, setSearchResults] = useState([]);
  const dispatch = useDispatch();

  const fetchData = async () => {
    const storedData = localStorage.getItem("authToken");

    if (storedData) {
      const authToken = JSON.parse(storedData);
      
      try {
        // Make a GET request to the API endpoint
        const response = await axios.get(
          "https://chatbotapps.mindpath.tech/api/v1/user/bots",
          {
            headers: {
              Authorization: `Bearer ${authToken}`,
            },
          }
        );

        const data = response.data.body;
       
        setBot(data);
         localStorage.setItem("botList", JSON.stringify(data));
        dispatch(setData(data));
      } catch (error) {
        console.error(error);
      }
    }
  };
  useEffect(() => {
    // Define a function to fetch the data from the API

    fetchData();
  }, []);
  {
  }
  const handleSearch = (event) => {
    const { value } = event.target;
    setSearchText(value);

    if (value.trim() === '') {
      setSearchResults(bot);
      console.log("bot",bot)// Reset search results to original data
    } else {
      const filteredResults = bot.filter((item) =>
        item.name.toLowerCase().includes(value.toLowerCase())
      );
      console.log("filteredResults", filteredResults);
      setSearchResults(filteredResults);
    }
  };
  const itemsToRender = searchText.trim() === '' ? bot : searchResults;
   console.log(bot)
  return (
    <>
      <Head>
        <title>ChatBot App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <SideBarComponent>
        <>
          <Box >
            <Box sx={{ display: "flex", marginBottom: '20px', alignItems: "center" ,justifyContent: "flex-end"}}>
               <Box sx={{ marginRight: "auto",marginLeft:"50%"}}>
            <Typography
              gutterBottom
              variant="h6"
              component="div"
              align="center"
              style={{
                fontWeight: 700,
               
              }}>
              BOT
            </Typography>
             </Box>
            <Search>
            <SearchIconWrapper>
              <SearchIcon />
            </SearchIconWrapper>
            <StyledInputBase
            value={searchText}
            onChange={handleSearch}
              placeholder="Searchâ€¦"
              inputProps={{ 'aria-label': 'search' }}
            />
          </Search>
            </Box>
            <Box
              style={{
                margin: "5px",
              }}>
              <Grid container spacing={3}>
                {itemsToRender.map((bot, index) => {
                  return (
                    // <Link href={`/bot/${bot.name.toLowerCase()}`} as={`/${bot.id}}`} key={bot._id}>
                    <Grid item key={index} xs={12} sm={6} md={4} lg={3}>
                      <Link href={`/bot/${bot._id}`}>
                        <Card
                          sx={{ maxWidth: 380 }}
                        // onClick={()=>{handleClick(bot.name)}}
                        >
                          <CardActionArea>
                            <CardContent>
                              <Typography
                                gutterBottom
                                variant="h6"
                                component="div"
                                align="center"
                                style={{
                                  fontSize: 18,
                                  fontWeight: 700,
                                  textOverflow: "ellipsis",
                                  whiteSpace: "nowrap",
                                  display: "-webkit-box",
                                  WebkitLineClamp: 2,
                                  WebkitBoxOrient: "vertical",
                                }}>
                                {bot.name}
                              </Typography>
                            </CardContent>
                            <Box
                              style={{
                                display: "flex",
                                justifyContent: "center",
                                alignItems: "center",
                                paddingBottom: "15px",
                              }}>
                              <Image
                                src={cardlogo.src}
                                alt={"Card Logo"}
                                width={cardlogo.width}
                                height={cardlogo.height}></Image>
                            </Box>
                          </CardActionArea>
                        </Card>
                      </Link>
                    </Grid>
                  );
                })}
              </Grid>
            </Box>
          </Box>
        </>
      </SideBarComponent>
    </>
  );
}
 
