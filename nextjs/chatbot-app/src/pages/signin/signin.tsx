import React from "react";
import Head from "next/head";
import Image from "next/image";
import {Box} from "@mui/material";
import {
  LoginCard,
  LoginLogoWraper,
  LoginPageWrapper,
  BotImage,
  CustomTextField,
  CustomSignInButton,
} from "./signin.style";
import SigninController from "./signin.controller";
import {
  logoColored,
  mindpathIcon,
  SignInBg2,
  signupPic,
  login
} from "../../assets/images";

export default function Signin() {
  const { getters, handlers } = SigninController();

  return (
    <>
      <LoginPageWrapper>
        <Head>
          <title>ChatBot App</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <Box>
          <Box sx={{transform: "scaleX(-1)"}} >
          <Image
            src={SignInBg2.src}
            alt={"background image"}
            layout="intrinsic"
            width={SignInBg2.width}
            height={SignInBg2.height}
            
          />
          </Box>
          <BotImage>
            <Image
              src={login.src}
              alt={"background image"}
              width={550}
              height={550}
              layout="responsive"
            />
          </BotImage>
            <LoginCard>
              <LoginLogoWraper>
              
                <Image
                  src={logoColored.src}
                  alt={"Company image"}
                  width={133}
                  height={54}
                />
              </LoginLogoWraper>
            <Box  sx={{
        display: 'flex',
        flexDirection: 'column',
        alignItems: 'center',
      }}>
                  <CustomTextField
                    
                    id="email"
                    label="Email"
                    variant="standard"
                    
                    onChange={handlers.validateEmail}
                    value={getters.email.value}
                    error={!getters.email.isValid}
                    helperText={getters.emailHelpertext}
                  />
                  <CustomTextField
                    id="password"
                    label="Password"
                    type="password"
                    autoComplete="current-password"
                    variant="standard"
                    fullWidth
                    onChange={handlers.validatePassword}
                    value={getters.password.value}
                    error={!getters.password.isValid}
                    helperText={getters.passwordHelpertext}
                  />
                </Box>
                <Box>
                  <CustomSignInButton
                    variant="contained"
                    type="submit"
                    onClick={handlers.handleSubmit}
                    disabled={
                      getters.email.isValid && getters.password.isValid
                        ? false
                        : true
                    }
                  >
                    Sign In
                  </CustomSignInButton>
              </Box>
            </LoginCard>
        </Box>
      </LoginPageWrapper>
    </>
  );
}
